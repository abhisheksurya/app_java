/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    // Apply JOOQ plugin
    id 'nu.studer.jooq' version '3.0.0'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

ext {
    jacksonVersion = "2.9.6"
    jerseyVersion = "2.27"

    testDeps = [
            'org.scalatest:scalatest_2.12:3.2.0-SNAP10',
            'junit:junit:4.13',
            'org.scalamock:scalamock_2.12:4.4.0',
            'org.mockito:mockito-core:3.5.10',
            'org.assertj:assertj-core:3.14.0',
    ]

    jacksonDeps = [
            [group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:jacksonVersion],
            [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:jacksonVersion],
            [group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version:jacksonVersion],
            [group: 'com.fasterxml.jackson.module', name: 'jackson-module-scala_2.12', version:jacksonVersion]
    ]

    jerseyDeps = [
            [group: 'org.glassfish.jersey.core', name: 'jersey-server', version:jerseyVersion],
            [group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version:jerseyVersion],
            [group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version:jerseyVersion],
            [group: 'org.glassfish.jersey.ext', name: 'jersey-bean-validation', version:jerseyVersion],
            [group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version:jerseyVersion],
            [group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version:jerseyVersion],
            [group: 'javax.annotation', name: 'javax.annotation-api', version:'1.3.1'],
            [group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0']
    ]

}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    // PostgreSQL driver
    jooqRuntime 'postgresql:postgresql:9.4.1208-jdbc42-atlassian-hosted'
    compile 'org.jooq:jooq'
}

/*jooq {
    version = '3.0.0' // the default (can be omitted)
    edition = 'OSS'    // the default (can be omitted), other allowed values are PRO, PRO_JAVA_6, and TRIAL
    //generateSchemaSourceOnCompilation = true
    appjava(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost:5432/appjava'
            user = 'postgres'
            password = 'postgres'
            /*properties {
                property {
                    key = 'ssl'
                    value = 'false'
                }
            }*/
 /*       }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                // ...
            }
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'public'
                includes = '.*'
                forcedTypes {
                    forcedType {
                        name = 'varchar'
                        expression = '.*'
                        types = 'JSONB?'
                    }
                    forcedType {
                        name = 'varchar'
                        expression = '.*'
                        types = 'INET'
                    }
                }
                // ...
            }
            generate {
                relations = true
                deprecated = true
                records = true
                immutablePojos = true
                fluentSetters = true
                // ...
            }
            target {
                packageName = 'appjava.db'
                //directory = '/src/generated/jooq/java'
            }
        }
    }
} */

application {
    // Define the main class for the application.
    mainClassName = 'app_java.App'
}

subprojects {
    apply from: "$rootDir/gradlescripts/integTest.gradle"

    /* custom jacoco version */
    jacoco {
        toolVersion = "0.7.6.201602180812"
    }

    /* jar uses a custom manifest which adds the version number per .jar */
    jar {
        enabled = true
        manifest = project.manifest {
            from sharedManifest
        }
    }

    test {
        dependsOn copyTestDeps

        workingDir "$runtimeDir"
        systemProperty "app.home", "$runtimeDir"
        systemProperty "log4j.configurationFile", "$runtimeDir/conf/log4j2.xml"
    }

    integTest {
        dependsOn copyIntegTestDeps

        workingDir "$runtimeDir"
        systemProperty "app.home", "$runtimeDir"
        systemProperty "log4j.configurationFile", "$runtimeDir/conf/log4j2.xml"
    }

    /* declare those artifacts which are uploaded to our repo */
    artifacts {
        archives jar
        archives testJar
        testArtifacts testJar
        integTestArtifacts integTestJar
    }
}
